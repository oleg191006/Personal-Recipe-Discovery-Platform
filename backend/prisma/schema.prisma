// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  recipes   Recipe[]
  ratings   Rating[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Recipe {
  id           String  @id @default(uuid())
  title        String
  description  String?
  ingredients  String
  instructions String
  cuisineType  String? @map("cuisine_type")

  authorId String @map("author_id")
  author   User   @relation(fields: [authorId], references: [id])

  ratings       Rating[]
  averageRating Float    @default(0) @map("average_rating")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("recipes")
}

model Rating {
  id       String @id @default(uuid())
  value    Int
  recipeId String @map("recipe_id")
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  userId   String
  user     User   @relation(fields: [userId], references: [id])

  @@unique([recipeId, userId])
  @@map("ratings")
}
